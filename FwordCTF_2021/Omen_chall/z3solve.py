from z3 import *


lengthFlag = 96
flag = [BitVec(f"flag{i}", 8) for i in range(0, lengthFlag)]

s = Solver()

for i in range(0, lengthFlag):
	s.add(flag[i] >= 32)
	s.add(flag[i] <= 125)
s.add(flag[33] + (flag[3] ^ (flag[49] ^ flag[78] ^ flag[0])) - flag[49] - flag[26] == 28)
s.add((flag[44] | (flag[69] ^ (flag[43] + flag[21] + (flag[42] & flag[58] & flag[1])))) == -9)
s.add((flag[26] ^ (flag[45] + (flag[64] ^ flag[13] & flag[2]))) - flag[34] - flag[70] == -54)
s.add((flag[76] & (flag[71] + flag[80] + (flag[82] & (flag[40] | (flag[3] - flag[41]))))) == 49)
s.add((flag[30] ^ (flag[14] | ((flag[85] ^ flag[20] ^ flag[35] ^ flag[4]) - flag[64]))) == -93)
s.add(flag[70] + flag[55] + (flag[60] ^ (flag[65] + (flag[32] ^ flag[22] ^ flag[5]))) == 94)
s.add(flag[18] == (flag[19] ^ (flag[62] ^ flag[74] ^ flag[12] & (flag[6] - flag[6]))))
s.add((flag[3] ^ (flag[81] ^ flag[37] ^ flag[48] ^ (flag[38] + (flag[52] ^ flag[7])))) == -49)
s.add((flag[49] | ((flag[82] & flag[26] & (flag[78] ^ flag[8])) - flag[91])) - flag[53] == -96)
s.add(flag[55] + (flag[90] ^ ((flag[63] & (flag[15] ^ flag[9])) - flag[3])) - flag[88] == -57)
s.add((flag[13] | (flag[78] + (flag[84] ^ (flag[72] + (flag[24] ^ (flag[33] | flag[10])))))) == 95 )
s.add((flag[5] | 0xff &(flag[4] & ((flag[78] ^ flag[11]) - flag[71] - flag[41]))) == 99)
s.add((flag[91] ^ 0xff &(flag[89] & (flag[92] ^ (flag[1] + (flag[71] & flag[12]) - flag[66])))) == 1)
s.add(flag[22] + (flag[32] ^ 0xff &(flag[21] + flag[38] + (flag[16] ^ flag[13]))) - flag[59] == 13)
s.add((flag[90] | 0xff &(flag[76] ^ (flag[20] + flag[14] - flag[0]))) - flag[40] - flag[72] == -56)
s.add((flag[76] ^ 0xff &(flag[76] & (flag[60] + flag[8] + flag[15] - flag[84] - flag[23]))) == 32)
s.add((flag[12] & 0xff &(flag[90] & (flag[39] ^ flag[82] ^ flag[8] & (flag[5] | flag[16])))) == 32)
s.add((flag[36] ^ 0xff &(flag[79] | flag[63] | (flag[70] + flag[30] + (flag[43] | flag[17])))) == 57)
s.add((flag[2] ^ 0xff &(flag[19] | flag[36] ^ (flag[83] | (flag[18] - flag[87])))) - flag[80] == -73)
s.add((flag[64] ^ 0xff &(flag[6] ^ flag[20] ^ (flag[82] + (flag[10] ^ (flag[19] - flag[63]))))) == -82)
s.add((flag[91] ^ 0xff &(flag[80] + (flag[13] | flag[39] | flag[71] ^ (flag[57] | flag[20])))) == -55)
s.add((flag[86] ^ 0xff &(flag[85] ^ flag[86] & (flag[72] ^ (flag[71] + (flag[54] ^ flag[21]))))) == 93)
s.add((flag[57] ^ 0xff &(flag[19] ^ flag[65] ^ flag[14] ^ (flag[22] - flag[58]))) - flag[38] == 94)
s.add((flag[21] ^ 0xff &(flag[6] ^ ((flag[26] ^ flag[72] & (flag[73] ^ flag[23])) - flag[1]))) == -12)
s.add((flag[29] & 0xff &(flag[69] & (flag[36] ^ (flag[52] + (flag[16] & (flag[24] - flag[76])))))) == 4)
s.add((flag[10] | 0xff &(flag[12] | ((flag[55] & (flag[38] ^ (flag[42] + flag[25]))) - flag[80]))) == -2)
s.add(flag[24] + (flag[47] & 0xff &((flag[16] & (flag[20] + (flag[71] & flag[26]))) - flag[47])) == -125)
s.add((flag[88] & 0xff &(flag[20] | flag[91] ^ flag[76] & flag[80] & flag[27])) - flag[13] == -11)
s.add(flag[12] + (flag[4] & 0xff &(flag[7] ^ (flag[79] | flag[1] & (flag[89] ^ flag[28])))) == 116)
s.add((flag[95] ^ 0xff &(flag[32] ^ flag[22] ^ (flag[68] + (flag[58] ^ flag[29]) - flag[54]))) == 76)
s.add((flag[69] ^ 0xff &(flag[59] ^ flag[26] & (flag[40] | flag[44] ^ flag[41] ^ flag[30]))) == 19)
s.add((flag[50] ^ 0xff &(flag[28] + (flag[16] & flag[24] & flag[31]) - flag[36] - flag[86])) == -64)
s.add((flag[50] ^ 0xff &(flag[37] ^ flag[69] ^ flag[54] ^ flag[36] ^ (flag[32] - flag[33]))) == -101)
s.add((flag[56] ^ 0xff &(flag[12] & (flag[52] ^ (flag[94] + flag[45] + flag[22] + flag[33])))) == 46)
s.add((flag[19] ^ 0xff &(flag[89] + (flag[6] ^ flag[34]) - flag[23] - flag[20] - flag[42])) == 107)
s.add((flag[10] | 0xff &(flag[60] + (flag[33] | flag[72] | (flag[27] + (flag[91] ^ flag[35]))))) == 105)
s.add((flag[94] ^ 0xff &(flag[3] & (flag[24] ^ flag[24] & flag[19] & (flag[42] ^ flag[36])))) == 42)
s.add((flag[17] ^ 0xff &(flag[57] | flag[71] | ((flag[7] ^ (flag[88] | flag[37])) - flag[19]))) == -114)
s.add((flag[56] ^ 0xff &(flag[0] ^ flag[76] & (flag[71] ^ flag[76] ^ (flag[38] - flag[9])))) == 57)
s.add((flag[22] ^ 0xff &(flag[8] ^ (flag[11] + flag[20] + (flag[4] ^ (flag[57] + flag[39]))))) == 12)
s.add(flag[91] + (flag[77] | 0xff &(flag[85] + (flag[38] ^ (flag[67] + flag[40])) - flag[78])) == 47)
s.add(flag[84] + (flag[86] ^ 0xff &(flag[85] ^ flag[51] & (flag[11] ^ (flag[78] | flag[41])))) == -110)
s.add((flag[12] ^ 0xff &(flag[31] ^ (flag[90] + (flag[27] ^ flag[0] ^ flag[42]) - flag[65]))) == -29)
s.add((flag[75] ^ 0xff &(flag[71] ^ (flag[64] + (flag[63] ^ flag[40] & (flag[2] ^ flag[43]))))) == 33)
s.add((flag[93] ^ 0xff &(flag[27] ^ (flag[35] | flag[81] ^ (flag[44] - flag[9])))) - flag[76] == 9)
s.add((flag[88] | 0xff &(flag[61] & flag[85] & (flag[78] ^ flag[71] & (flag[30] | flag[45])))) == 127)
s.add((flag[24] ^ 0xff &(flag[41] ^ flag[21] ^ flag[76] ^ ((flag[89] & flag[46]) - flag[90]))) == 66)
s.add((flag[86] ^ 0xff &(flag[28] + (flag[61] ^ flag[36] ^ flag[47]) - flag[18])) - flag[68] == -4)
s.add((flag[95] ^ 0xff &(flag[24] + (flag[8] | flag[46] ^ flag[61] ^ (flag[23] | flag[48])))) == -89)
s.add(flag[19] + (flag[25] | 0xff &(flag[95] + (flag[32] ^ flag[67] ^ flag[49]))) - flag[42] == -10)
s.add((flag[67] ^ 0xff &((flag[90] ^ flag[85] ^ flag[19] ^ flag[50]) - flag[36] - flag[46])) == 97)
s.add((flag[29] ^ 0xff &(flag[39] ^ flag[4] & ((flag[60] ^ (flag[59] + flag[51])) - flag[56]))) == 67)
s.add((flag[91] & 0xff &(flag[36] & (flag[91] + (flag[10] ^ flag[69] ^ (flag[23] + flag[52]))))) == 0)
s.add((flag[88] ^ 0xff &(flag[28] & (flag[19] ^ flag[45] & (flag[52] + (flag[81] ^ flag[53]))))) == 31)
s.add((flag[62] ^ 0xff &(flag[57] ^ (flag[27] + (flag[44] | ((flag[82] & flag[54]) - flag[60]))))) == -73)
s.add((flag[69] & 0xff &(flag[12] ^ (flag[10] + (flag[11] ^ flag[81] ^ flag[55]) - flag[17]))) == 94)
s.add(flag[88] + (flag[51] ^ 0xff &((flag[53] ^ flag[19] ^ flag[93] ^ flag[56]) - flag[36])) == 57)
s.add((flag[61] | 0xff &(flag[69] | flag[16] ^ (flag[13] + (flag[11] ^ flag[18] ^ flag[57])))) == -1)
s.add((flag[89] | 0xff &(flag[60] ^ flag[61] ^ flag[61] ^ flag[39] ^ flag[67] ^ flag[58])) == 122)
s.add(flag[10] + (flag[40] ^ 0xff &(flag[69] ^ flag[4] & (flag[59] - flag[86] - flag[46]))) == 108)
s.add((flag[40] & 0xff &(flag[68] | flag[18] ^ ((flag[76] ^ flag[84] ^ flag[60]) - flag[66]))) == 95)
s.add((flag[54] & 0xff &(flag[53] ^ flag[82] ^ (flag[56] + (flag[81] ^ (flag[61] - flag[87]))))) == 66)
s.add((flag[56] ^ 0xff &((flag[67] ^ ((flag[41] ^ flag[62]) - flag[42])) - flag[3])) - flag[44] == 120)
s.add((flag[14] ^ 0xff &(flag[55] | flag[30] ^ (flag[90] | flag[23] | flag[53] ^ flag[63]))) == 11)
s.add((flag[60] & 0xff &(flag[59] ^ flag[44] ^ flag[46] ^ (flag[71] | flag[29] & flag[64]))) == 34)
s.add((flag[85] | 0xff &((flag[43] ^ flag[58] & flag[88] & flag[65]) - flag[49] - flag[73])) == -75)
s.add(flag[12] + flag[88] + (flag[40] ^ 0xff &(flag[18] ^ (flag[16] + flag[66] - flag[89]))) == -83)
s.add((flag[59] ^ 0xff &(flag[90] & ((flag[30] ^ flag[9] ^ flag[3] ^ flag[67]) - flag[48]))) == 127)
s.add((flag[50] & 0xff &(flag[0] | flag[51] ^ flag[11] ^ flag[36] ^ flag[4] ^ flag[68])) == 86)
s.add((flag[73] ^ 0xff &(flag[0] ^ ((flag[4] ^ flag[81] ^ flag[55] ^ flag[69]) - flag[19]))) == -77)
s.add((flag[48] ^ 0xff &(flag[81] ^ flag[12] ^ flag[63] & (flag[15] | flag[37] ^ flag[70]))) == 116)
s.add((flag[51] ^ 0xff &(flag[57] ^ ((flag[6] ^ flag[77] ^ flag[87] ^ flag[71]) - flag[80]))) == -102)
s.add((flag[12] & 0xff &(flag[76] ^ flag[57] ^ flag[93] ^ flag[89] & flag[72])) - flag[92] == 6)
s.add((flag[49] ^ 0xff &(flag[87] + (flag[6] ^ flag[65] ^ flag[94] ^ flag[73]) - flag[56])) == -56)
s.add((flag[10] ^ 0xff &(flag[35] + (flag[12] | flag[60] ^ flag[74]) - flag[58])) - flag[80] == 72)
s.add((flag[49] ^ 0xff &(flag[68] ^ (flag[94] + (flag[71] ^ (flag[37] + flag[75] - flag[50]))))) == -96)
s.add((flag[66] ^ 0xff &((flag[53] | flag[65] ^ flag[15] & (flag[83] + flag[76])) - flag[15])) == 44)
s.add((flag[18] ^ 0xff &(flag[91] & (flag[30] ^ flag[8] ^ flag[30] ^ (flag[56] + flag[77])))) == 101)
s.add(flag[45] + (flag[55] ^ 0xff &(flag[46] ^ ((flag[58] ^ (flag[79] | flag[78])) - flag[46]))) == -32)
s.add((flag[86] ^ 0xff &(flag[31] ^ flag[94] ^ flag[24] & (flag[23] | flag[93] | flag[79]))) == 4)
s.add((flag[21] & 0xff &(flag[7] ^ flag[46] ^ flag[63] & (flag[67] | (flag[80] - flag[55])))) == 64)
s.add((flag[1] | 0xff &(flag[48] ^ flag[53] ^ flag[44] ^ flag[20] ^ flag[30] & flag[81])) == 119)
s.add((flag[25] | 0xff &(flag[1] + (flag[23] ^ flag[70] ^ flag[82]) - flag[51] - flag[14])) == 119)
s.add((flag[37] ^ 0xff &(flag[22] ^ (flag[58] | flag[5] | flag[60] ^ (flag[39] | flag[83])))) == 2)
s.add((flag[51] ^ 0xff &(flag[51] & ((flag[91] | flag[74] ^ (flag[9] | flag[84])) - flag[6]))) == 42)
s.add((flag[81] ^ 0xff &(flag[2] ^ flag[19] ^ flag[62] & (flag[47] + (flag[71] ^ flag[85])))) == 20)
s.add((flag[72] ^ 0xff &(flag[33] & (flag[94] ^ flag[58] ^ flag[70] ^ (flag[84] + flag[86])))) == 2)
s.add((flag[44] | 0xff &(flag[80] & (flag[88] ^ (flag[20] | flag[36] ^ flag[44] & flag[87])))) == 125)
s.add((flag[81] ^ 0xff &(flag[38] ^ flag[94] ^ flag[25] & (flag[50] ^ (flag[88] - flag[0])))) == 56)
s.add((flag[3] | 0xff &(flag[84] | flag[93] ^ (flag[11] | flag[66] & (flag[63] ^ flag[89])))) == 115)
s.add((flag[52] & 0xff &(flag[13] ^ flag[85] & (flag[16] + (flag[95] ^ (flag[67] | flag[90]))))) == 32)
s.add((flag[44] ^ 0xff &(flag[68] ^ flag[78] ^ (flag[74] + (flag[80] ^ (flag[51] + flag[91]))))) == 78)
s.add((flag[18] ^ 0xff &(flag[15] ^ (flag[33] | flag[30] & (flag[87] ^ (flag[92] - flag[59]))))) == 104)
s.add((flag[67] & 0xff &(flag[39] ^ (flag[76] + (flag[58] ^ flag[15] ^ flag[93]) - flag[6]))) == 4)
s.add((flag[65] & 0xff &(flag[77] & (flag[66] ^ (flag[0] | flag[72] ^ flag[80] ^ flag[94])))) == 116)
s.add((flag[83] ^ 0xff &(flag[55] | ((flag[7] ^ flag[70] & (flag[8] ^ flag[95])) - flag[28]))) == -96)
s.add(flag[79] == 95)
s.add(flag[47] == 52)
s.add(flag[61] == 117)

s.add(flag[0] == ord('F'))
s.add(flag[1] == ord('W'))
s.add(flag[2] == ord('O'))
s.add(flag[3] == ord('R'))
s.add(flag[4] == ord('D'))
s.add(flag[5] == ord('c'))
s.add(flag[6] == ord('t'))
s.add(flag[7] == ord('f'))
s.add(flag[8] == ord('{'))
s.add(flag[95] == ord('}'))



if s.check() == sat:
	m = s.model()
	flag = ''.join(chr(m[flag[i]].as_long()) for i in range(0, lengthFlag))
	print(flag)

#FWORDctf{Wh4t_4b0ut_th1s_w31rd_L0ng_fL4g_th4t_m4k3_n0_s3ns3_but_st1LL_w1LL_g1v3_y0u_s0m3_p01ntz}